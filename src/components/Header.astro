---
// ヘッダーコンポーネント（新デザイン）
const currentPath = Astro.url.pathname;
const isHomeActive = currentPath === '/';
const isServiceActive = currentPath.startsWith('/service');
const isWorksActive = currentPath.startsWith('/works');
const isCompanyActive = currentPath.startsWith('/company');
const isRecruitActive = currentPath.startsWith('/recruit');
---

<header class="fixed top-0 left-0 right-0 z-20 bg-[#041b2a] text-white header-fade">
  <div class="relative mx-auto max-w-[1400px] px-4 lg:px-8 py-2">
    <!-- 上段：ロゴ / CTA or ハンバーガー（高さ固定） -->
    <div class="flex items-center justify-between h-16 lg:h-20">
      <!-- 左：ロゴ -->
      <a href="/" class="shrink-0 pl-2 flex items-center">
        <img src="/logo.png" onerror="this.onerror=null;this.src='/favicon.svg'" alt="BuzzLiminal Logo" class="h-10 w-auto" />
      </a>

      <!-- 右：LINEボタン（モバイル非表示） -->
      <a href="https://line.me/R/ti/p/@792kbrnd?ts=02241454&oat_content=url" target="_blank" rel="noopener noreferrer" class="hidden md:inline-flex pr-2 items-center rounded-full px-8 md:px-10 py-3 bg-[#12cf3d] text-white font-bold shadow-md transition-transform duration-200 hover:scale-105">
        <img src="/LINE_Brand_icon.png" alt="LINE" class="w-5 h-5 mr-2" />
        <span>LINE相談をする▶︎</span>
      </a>

      <!-- モバイル：ハンバーガー（右端） -->
      <button class="md:hidden ml-auto pr-2 inline-flex items-center justify-center w-10 h-10 rounded" aria-controls="mobile-nav" aria-expanded="false" data-nav-toggle>
        <svg class="w-7 h-7 text-white" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" aria-hidden="true">
          <line x1="3" y1="6" x2="21" y2="6" />
          <line x1="3" y1="12" x2="21" y2="12" />
          <line x1="3" y1="18" x2="21" y2="18" />
        </svg>
      </button>
    </div>

    <!-- 下段：ナビ（最大幅では中央に絶対配置、それ未満は下段に表示） -->
    <nav class="hidden md:block nav-wide mt-2">
      <ul class="flex items-center justify-center gap-10 xl:gap-14 text-lg md:text-xl font-semibold gnav-list">
        <li><a href="/" class={`relative inline-flex items-center px-2 py-3 text-white/90 hover:text-white transition-colors ${isHomeActive ? 'is-active' : ''}`}>Home</a></li>
        <li><a href="/service" class={`relative inline-flex items-center px-2 py-3 text-white/90 hover:text-white transition-colors ${isServiceActive ? 'is-active' : ''}`}>Service</a></li>
        <li><a href="/works" class={`relative inline-flex items-center px-2 py-3 text-white/90 hover:text-white transition-colors ${isWorksActive ? 'is-active' : ''}`}>Works</a></li>
        <li><a href="/company" class={`relative inline-flex items-center px-2 py-3 text-white/90 hover:text-white transition-colors ${isCompanyActive ? 'is-active' : ''}`}>Company</a></li>
        <li><a href="/recruit" class={`relative inline-flex items-center px-2 py-3 text-white/90 hover:text-white transition-colors ${isRecruitActive ? 'is-active' : ''}`}>Recruit</a></li>
      </ul>
    </nav>
  </div>

  <!-- モバイルナビ（ドロップダウン） -->
  <div id="mobile-nav" class="md:hidden hidden absolute left-0 right-0 top-full bg-[#041b2a] border-t border-white/10">
    <ul class="py-2">
      <li><a href="/" class="block px-4 py-3 text-white/90 hover:text-white">Home</a></li>
      <li><a href="/service" class="block px-4 py-3 text-white/90 hover:text-white">Service</a></li>
      <li><a href="/works" class="block px-4 py-3 text-white/90 hover:text-white">Works</a></li>
      <li><a href="/company" class="block px-4 py-3 text-white/90 hover:text-white">Company</a></li>
      <li><a href="/recruit" class="block px-4 py-3 text-white/90 hover:text-white">Recruit</a></li>
    </ul>
  </div>
</header> 
<style>
  /* アクティブ三角インジケータ */
  .is-active::after {
    content: "";
    position: absolute;
    left: 50%;
    transform: translateX(-50%);
    bottom: -6px; /* バー外に少し出す */
    width: 0; height: 0;
    border-left: 6px solid transparent;
    border-right: 6px solid transparent;
    border-top: 6px solid #2A41A8; /* 濃い側のブルーに合わせる */
    z-index: 2;
  }
</style>
<script>
  // スクロール方向でヘッダーをフェード（累積式）
  const initHeaderFade = () => {
    const header = document.querySelector<HTMLElement>('.header-fade');
    if (!header || header.dataset.fadeInit === '1') return;
    header.dataset.fadeInit = '1';

    let lastY: number = window.scrollY;
    let progress: number = 0; // 0: 表示, 1: 完全に隠す
    let rafId: number = 0;
    const clamp = (v: number, min: number, max: number): number => Math.min(Math.max(v, min), max);
    const sensitivityPx = 400; // どれくらいスクロールで全隠れするか
    const minOpacity = 0.0; // ある程度下で完全に透明にする

    const apply = () => {
      const op = 1 - progress * (1 - minOpacity);
      header.style.opacity = String(op);
      header.style.transform = `translateY(${progress * 10}px)`; // スライド量を減らす
      rafId = 0;
    };

    const onScroll = () => {
      if (rafId) return;
      rafId = requestAnimationFrame(() => {
        const currentY = window.scrollY;
        const deltaPx = currentY - lastY;
        // 小さなスクロールは無視してクリック時の違和感を軽減
        if (Math.abs(deltaPx) < 2) { rafId = 0; return; }
        progress = clamp(progress + deltaPx / sensitivityPx, 0, 1);
        lastY = currentY;
        apply();
      });
    };

    // 初期適用
    apply();
    window.addEventListener('scroll', onScroll, { passive: true });
  };

  // さまざまな読み込みパスで初期化
  if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', initHeaderFade, { once: true });
  } else {
    initHeaderFade();
  }
  document.addEventListener('astro:page-load', initHeaderFade);
  
  // モバイルナビのトグル
  const initMobileNav = () => {
    const toggle = document.querySelector('[data-nav-toggle]');
    const panel = document.getElementById('mobile-nav');
    if (!toggle || !panel) return;
    toggle.addEventListener('click', () => {
      const expanded = toggle.getAttribute('aria-expanded') === 'true';
      toggle.setAttribute('aria-expanded', String(!expanded));
      panel.classList.toggle('hidden', expanded);
    });
  };
  if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', initMobileNav, { once: true });
  } else {
    initMobileNav();
  }
  document.addEventListener('astro:page-load', initMobileNav);
</script>

<style>
  .header-fade { transition: opacity 180ms ease, transform 180ms ease; will-change: opacity, transform; }
  /* 最大幅時はナビを上段の中央に重ねる */
  .nav-wide { position: absolute; left: 50%; top: 50%; transform: translate(-50%, -50%); width: auto; }
  @media (max-width: 1399px) {
    /* 少しでも狭い場合は下段へ移し、左右中央寄せで幅いっぱい */
    .nav-wide { position: static; transform: none; margin-top: 8px; width: 100%; }
  }
</style>